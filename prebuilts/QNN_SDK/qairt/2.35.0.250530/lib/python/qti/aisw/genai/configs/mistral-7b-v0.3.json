{
    "general.name": "mistral-7b",
    "general.architecture": "generic",
    "general.tokenizer": "tiktoken",
    "general.hf_hub_model_id": "mistralai/Mistral-7B-v0.3",
    "general.alignment" : 128,
    "size.vocabulary" : 32768,
    "size.context" : 32768,
    "size.embedding" : 4096,
    "size.feedforward" : 14336,
    "architecture.num_decoders" : 32,
    "architecture.num_heads" : 32,
    "architecture.num_kv_heads" : 8,
	"architecture.connector": "sequential_pre_layer_normalization",
    "architecture.gating" : "gated",
    "operation.normalization" : "RMS-norm",
    "operation.normalization_epsilon" : 1e-5,
    "operation.activation" : "SiLU",
    "operation.positional_embedding" : "RoPE",
    "tensor.kq_complex_organization" : "SoA",
    "operation.rope_num_rotations" : 128,
    "operation.rope_theta" : 1000000.0,
    "tensor.layer_name": "model.layers.(\\d+).",
    "tensor.embedding_token_weight": {
        "name": "model.embed_tokens.weight"
    },
    "tensor.attention_normalization_weight": {
        "name": "input_layernorm.weight"
    },
    "tensor.attention_q_weight": {
        "name": "self_attn.q_proj.weight",
        "transposed": true
    },
    "tensor.attention_k_weight": {
        "name": "self_attn.k_proj.weight",
        "transposed": true
    },
    "tensor.attention_v_weight": {
        "name": "self_attn.v_proj.weight",
        "transposed": true
    },
    "tensor.attention_output_weight": {
        "name": "self_attn.o_proj.weight",
        "transposed": true
    },
    "tensor.feedforward_normalization_weight": {
        "name": "post_attention_layernorm.weight"
    },
    "tensor.feedforward_gate_weight": {
        "name": "mlp.gate_proj.weight",
        "transposed": true
    },
    "tensor.feedforward_up_weight": {
        "name": "mlp.up_proj.weight",
        "transposed": true
    },
    "tensor.feedforward_output_weight": {
        "name": "mlp.down_proj.weight",
        "transposed": true
    },
    "tensor.output_normalization_weight": {
        "name": "model.norm.weight"
    },
    "tensor.output_weight": {
        "name": "lm_head.weight",
        "transposed": true
    }
}
